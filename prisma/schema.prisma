generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @unique
  name     String
  cpf      String @unique
  email    String @unique
  contact  Int    @unique
  idade    Int
  cidade   String
  role     String
  password String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  MovieBasic   MovieBasic[]
  MoviePattern MoviePattern[]
  MoviePremium MoviePremium[]

  @@map("user")
}

model MovieBasic {
  id String @id @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String

  movie Movie[]
  serie Serie[]

  @@map("moviebasic")
}

model MoviePattern {
  id String @id @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String

  movie   Movie[]
  serie   Serie[]
  drawing Drawing[]

  @@map("moviepattern")
}

model MoviePremium {
  id String @id @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String

  movie       Movie[]
  serie       Serie[]
  drawing     Drawing[]
  documentary Documentary[]

  @@map("moviepremium")
}

model Movie {
  id          String @id @unique
  title       String
  description String
  evaluation  Float
  image       String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  moviebasic   MovieBasic[]
  moviepattern MoviePattern[]
  moviepremium MoviePremium[]

  @@map("movies")
}

model Serie {
  id          String @id @unique
  title       String
  description String
  evaluation  Float
  image       String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  moviebasic   MovieBasic[]
  moviepattern MoviePattern[]
  moviepremium MoviePremium[]

  @@map("serie")
}

model Drawing {
  id          String @id @unique
  title       String
  description String
  evaluation  Float
  image       String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  moviepattern MoviePattern[]
  moviepremium MoviePremium[]

  @@map("drawing")
}

model Documentary {
  id          String @id @unique
  title       String
  description String
  evaluation  Float
  image       String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  moviepremium MoviePremium[]

  @@map("documentary")
}
